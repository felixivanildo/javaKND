name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Ou qualquer branch que você deseja monitorar

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Atualizado para a versão 3

      - name: Set up JDK
        uses: actions/setup-java@v3  # Atualizado para a versão 3
        with:
          java-version: '21'
          distribution: 'adopt'  # Adicionado o campo distribution

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload JAR file
        uses: actions/upload-artifact@v3  # Atualizado para a versão 3
        with:
          name: spring-app
          path: target/api-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Espera o job de build ser concluído

    steps:
      - name: Download JAR file
        uses: actions/download-artifact@v3  # Atualizado para a versão 3
        with:
          name: spring-app

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
          ssh-key-passphrase: ${{ secrets.SSH_KEY_PASSPHRASE }}

      - name: Deploy to EC2
        run: |
          scp -o StrictHostKeyChecking=no api-0.0.1-SNAPSHOT.jar ec2-user@<EC2_PUBLIC_IP>:/home
          ssh -o StrictHostKeyChecking=no ec2-user@<EC2_PUBLIC_IP> << 'EOF'
            cd /home
            docker-compose down
            docker-compose up --build -d
          EOF
