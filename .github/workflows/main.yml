name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Ou qualquer branch que você deseja monitorar

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Atualizado para a versão 3

      - name: Set up JDK
        uses: actions/setup-java@v3  # Atualizado para a versão 3
        with:
          java-version: '21'
          distribution: 'adopt'  # Adicionado o campo distribution

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload JAR file
        uses: actions/upload-artifact@v3  # Atualizado para a versão 3
        with:
          name: spring-app
          path: target/api-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Espera o job de build ser concluído

    steps:
      - name: Download JAR file
        uses: actions/download-artifact@v3  # Atualizado para a versão 3
        with:
          name: spring-app

      - name: Set up SSH
        uses: marwaha-raghav/ssh-agent-ansible@v0.2.1
        with:
          ANSIBLE_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          SSH_KEY_PASSPHRASE: ${{ secrets.EC2_PASSPHRASE }}

      - name: Deploy to EC2
        run: |
          scp api-0.0.1-SNAPSHOT.jar ec2-user@3.141.13.199
          ssh ec2-user@3.141.13.199 << 'EOF'
            cd ~
            docker-compose down
            docker-compose up --build -d
          EOF
